01) Предположим, что все возможные перестановки элементов x1, x2, ..., xn равновероятны, где n -- нечетное число. Какова вероятность того, что произвольный элемент xi окажется посередине?

02) Дан массив натуральных чисел, в котором все элементы, кроме одного, встречаются дважды. Как найти неповторяющийся?
    var result = 0;
    foreach (var x in a) {
        result = result xor x;
    }
    return result;

03) Дан массив из n+1 натурального числа в диапазоне [1..n]. Найдите любой повторяющийся элемент за O(n) времени и O(1) дополнительной памяти.
    var mark = 0;
    for (var i = 1; i <= n + 1; ++i) {
        if (a[i] > 0) {
            var x = a[i];
            while (a[x] > 0) {
                var y = x;
                x = a[x];
                a[y] = mark;
            }
            if (a[x] != mark)
                return x;
            mark = mark - 1;
        }
    }

04) Дана строка, состоящая из нулей и единиц. Первый элемент строки - 0, а последний - 1. Найдите индекс любой подстроки вида "01" за сублинейное время.

05) Дан массив, состоящий из целых чисел. Найдите подмассив с максимальной суммой за один проход по массиву.
    struct window {
        int left, right;
        int summa;

        void handle(int x) {
            if (summa < 0) {
                summa = 0;
                left = rigth + 1;
            }
            right = right + 1;
            summa = summa + x;
            if (summa < 0) {
                summa = x;
                left = right;
            }
        }
    }

    window curr(summa = -oo, left = right = -1);
    window best(summa = -oo);
    foreach (var x in a) {
        curr.handle(x);
        if (best.summa < curr.summa) {
            best = curr;
        }
    }
    return best.left, best.right;

06) Дан массив длины n, состоящий из нулей и единиц. Найдите в нем подмассив максимальной длины, в котором количество единиц равно количеству нулей. Ограничение: O(n) по времени и O(n) по дополнительной памяти.
    int[] summa;
    int[] where = { -1 };
    for (var i = 0; i < |a|; ++i) {
        summa[i] = summ[i - 1] + 2 * a[i] - 1;
        if (where[summa[i]] != -1) {
            where[summa[i]] = i;
        }
    }
    var longest = 0;
    for (var i = 0; i < |a|; ++i) {
        if (0 <= where[summa[i]] < i) {
            longest = max(longest, i - where[summa[i]]);
        }
    }
    return longest;

07) Бактерия делится пополам раз в 1 минуту. Одна такая бактерия была помещена в банку, и ровно через 1 час вся банка заполнилась бактериями. Через какое время банка была заполнена наполовину?

08) Вы оказались на таинственном острове и были схвачены туземцами. Вождь поставил условие: он загадывает три двузначных числа - A, B и С, после чего Вы называете три числа - X, Y и Z, а вождь сообщает Вам сумму AX+BY+CZ. Угадайте числа, загаданные вождем, - и Вы свободны. В противном случае Вас ждет казнь.. Удачи!

09) Великан поймал 10 гномов и поставил условие: он выстраивает гномов по росту таким образом, что каждый гном видит перед собой только гномов ниже его ростом, и надевает на них черные и белые шляпы в произвольном порядке. После этого великан подходит к каждому гному по очереди, начиная с самого высокого, и спрашивает, какого цвета на нем шляпа. В случае неправильного ответа великан съедает гнома. Ни один из гномов не знает, какого цвета на нем шляпа, однако перед тем, как выстроить гномов, великан дает им время на обсуждение коллективной стратегии. Какую стратегию следует выбрать гномам?

10) Как вычислить n-ое число Фибоначчи за сублинейное количество арифметических операций?
    F1 = 1
    F0 = 0
    Fn+1 = Fn   + Fn-1;
    Fn   = Fn-1 + Fn-2;

    { Fn+1 }` = { Fn   }` { 1 1 }
    { Fn   }  = { Fn-1 }  { 1 0 }

    int fib(int n) {
        if (n > 0) {
            { Fn+1, Fn } = { 1, 0 } *
                pow({ 1, 1 }
                    { 1, 0 }, n);
            return Fn;
        }
        return 0;
    }

    int pow(int[,] a, int n) {
        if (n > 0) {
            if (n mod 2 = 0)
                return pow(a * a, n / 2);
            return a * pow(a, n - 1);
        }
        return new {
            { 1, 0 },
            { 0, 1 }
        };
    }

11) Решите числовой ребус: ATOM x ATOM = *****ATOM. Цифры заменены буквами и звездочками. Одинаковыми буквами заменены одинаковые цифры, а разными буквами - неодинаковые цифры. Звездочки же могут обозначать любые цифры, как одинаковые, так и неодинаковые.
    for (var a = 1; a <= 9; ++a)
    for (var t = 0; t <= 9; ++t)
    for (var o = 0; o <= 9; ++o)
    for (var m = 0; m <= 9; ++m) {
        if (distinct(a, t, o, m)) {
            var atom = a * 1000 + t * 100 + o * 10 + m;
            if (atom * atom mod 10000 = atom) {
                return atom;
            }
        }
    }

12) В шестизначном числе, которое делится на семь, последнюю цифру переставили в начало. Докажите, что полученное число также делится на семь.